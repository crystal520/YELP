
<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
    <script src="/js/d3.v3.min.js"></script>
    <style type="text/css">

html, body, #map {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

.business, .business svg {
  position: absolute;
}

.business svg {
  width: 60px;
  height: 20px;
  padding-right: 100px;
  font: 10px sans-serif;
}

.business circle {
  fill: brown;
  stroke: black;
  stroke-width: 1.5px;
}

    </style>
  </head>
  <body>
    <div id="map"></div>
    <script type="text/javascript">

		// Create the Google Map…
		var map = new google.maps.Map(d3.select("#map").node(), {
		  zoom: 4,
		  center: new google.maps.LatLng(37.76487, -122.41948),
		  mapTypeId: google.maps.MapTypeId.TERRAIN
		});

		// Load the business data. When the data comes back, create an overlay.
		// d3.json("business.json", function(data) {
		  var data = <%-JSON.stringify(businessData)%>;
		  var overlay = new google.maps.OverlayView();
		   // console.log(data);
		  // Add the container when the overlay is added to the map.
		  overlay.onAdd = function() {
		    var layer = d3.select(this.getPanes().overlayLayer).append("div")
		        .attr("class", "business");

		    // Draw each marker as a separate SVG element.
		    // We could use a single SVG, but what size would it have?
		    overlay.draw = function() {
		      var projection = this.getProjection(),
		          padding = 10;

		      var marker = layer.selectAll("svg")
		          .data(d3.entries(data))
		          .each(transform) // update existing markers
		        .enter().append("svg:svg")
		          .each(transform)
		          .attr("class", "marker");

		      // Add a circle.
		      marker.append("svg:circle")
		          .attr("r", 4.5)
		          .attr("cx", padding)
		          .attr("cy", padding);

		      // Add a label.
		      marker.append("svg:text")
		          .attr("x", padding + 7)
		          .attr("y", padding)
		          .attr("dy", ".31em")
		          .text(function(d) { return d.key; });

		      function transform(d) {
		        d = new google.maps.LatLng(d.value[1], d.value[0]);
		        d = projection.fromLatLngToDivPixel(d);
		        return d3.select(this)
		            .style("left", (d.x - padding) + "px")
		            .style("top", (d.y - padding) + "px");
		      }
		    };
		  };

		  // Bind our overlay to the map…
		  overlay.setMap(map);
		// });

    </script>
  </body>
</html>